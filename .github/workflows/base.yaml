# This is a basic workflow to help you get started with Actions

name: Deploy_Prod

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8.10'
          cache: 'pip'

      # - name: cache installed libraries
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.pip
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}

      # builds virtual environment for python executables
      - name: build venv
        run: python -m venv env

      # activates virtual environment
      - name: activate venv
        run: source ./env/bin/activate

      # validates that we are in virtual environment
      - name: verify venv
        run: sudo ./__test__/verify_venv.py

      # Runs a set of commands using the runners shell
      - name: install requirements.txt
        run: pip install -r requirements.txt

  validate:
    needs: build

    # ----------------------------------------------------------------------- #
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8.10'
          cache: 'pip'

      # builds virtual environment for python executables
      - name: build venv
        run: python -m venv env

      # activates virtual environment
      - name: activate venv
        run: source ./env/bin/activate

      # Runs a set of commands using the runners shell
      - name: install requirements.txt
        run: pip install -r requirements.txt

    # ----------------------------------------------------------------------- #

      # force failure
      - name: try to fail
        run: exit 1
      - name: verify failure
        run: echo 'did we fail'
